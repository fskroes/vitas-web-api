{"version":3,"sources":["component/dropzone.js","component/progress.js","component/upload.js","component/header.js","component/footer.js","App.js","reportWebVitals.js","index.js"],"names":["Dropzone","props","state","hightlight","fileInputRef","React","createRef","openFileDialog","bind","onFilesAdded","onDragOver","onDragLeave","onDrop","this","disabled","current","click","evt","files","target","array","fileListToArray","event","preventDefault","disabed","setState","dataTransfer","list","i","length","push","item","className","onClick","style","cursor","ref","type","onChange","alt","src","Component","Progress","width","progress","useStyles","makeStyles","theme","table","minWidth","control","padding","spacing","Upload","useState","setFiles","uploading","setUploading","uploadProgress","setUploadProgress","successfullUploaded","setSuccessfullUploaded","TFpredictions","setTFpredictions","CVpredictions","setCVpredictions","classes","uploadFiles","a","forEach","file","formData","FormData","append","name","fetch","method","body","then","res","json","dataCV","top5_customvision","dataTF","top5","catch","err","console","log","e","renderProgress","percentage","opacity","clear","useEffect","Fragment","Grid","container","direction","alignItems","justify","old_files","map","xs","URL","createObjectURL","height","TableContainer","component","Paper","Table","size","aria-label","TableHead","TableRow","TableCell","align","TableBody","d","idx","background","scope","class","parseInt","prob","renderPredictions","renderPredictionsCustomVision","toolbar","paddingRight","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","title","flexGrow","paper","display","overflow","flexDirection","fixedHeight","Header","open","AppBar","position","clsx","Toolbar","Typography","variant","color","noWrap","IconButton","Badge","badgeContent","Copyright","Link","href","Date","getFullYear","footer","backgroundColor","palette","Footer","description","Container","maxWidth","gutterBottom","App","isAPIAlive","setApiAlive","text","root","appBarSpacer","mixins","content","paddingTop","paddingBottom","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d42476ce.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./dropzone.css\";\n\nclass Dropzone extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hightlight: false };\n    this.fileInputRef = React.createRef();\n\n    this.openFileDialog = this.openFileDialog.bind(this);\n    this.onFilesAdded = this.onFilesAdded.bind(this);\n    this.onDragOver = this.onDragOver.bind(this);\n    this.onDragLeave = this.onDragLeave.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  openFileDialog() {\n    if (this.props.disabled) return;\n    this.fileInputRef.current.click();\n  }\n\n  onFilesAdded(evt) {\n    if (this.props.disabled) return;\n    const files = evt.target.files;\n    if (this.props.onFilesAdded) {\n      const array = this.fileListToArray(files);\n      this.props.onFilesAdded(array);\n    }\n  }\n\n  onDragOver(event) {\n    event.preventDefault();\n    if (this.props.disabed) return;\n    this.setState({ hightlight: true });\n  }\n\n  onDragLeave(event) {\n    this.setState({ hightlight: false });\n  }\n\n  onDrop(event) {\n    event.preventDefault();\n    if (this.props.disabed) return;\n    const files = event.dataTransfer.files;\n    if (this.props.onFilesAdded) {\n      const array = this.fileListToArray(files);\n      this.props.onFilesAdded(array);\n    }\n    this.setState({ hightlight: false });\n  }\n\n  fileListToArray(list) {\n    const array = [];\n    for (var i = 0; i < list.length; i++) {\n      array.push(list.item(i));\n    }\n    return array;\n  }\n\n  render() {\n    return (\n      <div\n        className={`Dropzone ${this.state.hightlight ? \"Highlight\" : \"\"}`}\n        onDragOver={this.onDragOver}\n        onDragLeave={this.onDragLeave}\n        onDrop={this.onDrop}\n        onClick={this.openFileDialog}\n        style={{ cursor: this.props.disabled ? \"default\" : \"pointer\" }}\n      >\n        <input\n          ref={this.fileInputRef}\n          className=\"FileInput\"\n          type=\"file\"\n          // multiple\n          onChange={this.onFilesAdded}\n        />\n        <img\n          alt=\"upload\"\n          className=\"Icon\"\n          src=\"baseline-cloud_upload-24px.svg\"\n        />\n        <span>Upload Files</span>\n      </div>\n    );\n  }\n}\n\nexport default Dropzone;\n","import React, { Component } from 'react'\nimport './progress.css'\n\nclass Progress extends Component {\n    constructor(props) {\n      super(props)\n      this.state = {}\n    }\n    render() {\n      return (\n        <div className=\"ProgressBar\">\n          <div\n            className=\"Progress\"\n            style={{ width: this.props.progress + '%' }}\n          />\n        </div>\n      )\n    }\n  }\n  \n  export default Progress","\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Dropzone from \"../component/dropzone\";\nimport \"./upload.css\";\nimport Progress from \"../component/progress\";\nimport 'whatwg-fetch';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { TableContainer } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 850,\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n}));\n\n\nfunction Upload() {\n  const [files, setFiles] = React.useState([]);\n  const [uploading, setUploading] = React.useState(false);\n  const [uploadProgress, setUploadProgress] = React.useState({});\n  const [successfullUploaded, setSuccessfullUploaded] = React.useState(false);\n  const [TFpredictions, setTFpredictions] = React.useState([]);\n  const [CVpredictions, setCVpredictions] = React.useState([]);\n  \n  const classes = useStyles();\n\n  React.useEffect(() => {\n    console.log(files)\n  }, [files]);\n\n  function onFilesAdded(file) {\n    const old_files = [...files, ...file];\n    setFiles(old_files);\n  }\n\n\n  async function uploadFiles() {\n    setUploadProgress({});\n    setUploading(true);\n    try {\n      files.forEach(file => {\n        const formData = new FormData();\n        formData.append(\"file\", file, file.name);\n\n        fetch('http://localhost:3000/api/upload', {\n          method: 'POST',\n          body: formData\n        })\n        .then(res => res.json())\n        .then(json => {\n          setCVpredictions(json.dataCV.top5_customvision)\n          setTFpredictions(json.dataTF.top5)\n        })\n        .catch(err => console.log(err));\n      });\n\n      setSuccessfullUploaded(true);\n      setUploading(false);\n    } catch (e) {\n      // Not Production ready! Do some error handling here instead...\n      setSuccessfullUploaded(true);\n      setUploading(false);\n    }\n  }\n\n  function renderProgress(file) {\n    if (uploading || successfullUploaded) {\n      return (\n        <div className=\"ProgressWrapper\">\n          <Progress progress={uploadProgress[file.name] ? uploadProgress[file.name].percentage : 0} />\n          <img\n            className=\"CheckIcon\"\n            alt=\"done\"\n            src=\"baseline-check_circle_outline-24px.svg\"\n            style={{\n              opacity:\n                uploadProgress[file.name] && uploadProgress[file.name].state === \"done\" ? 0.5 : 0\n            }}\n          />\n        </div>\n      );\n    }\n  }\n\n  function clear() {\n    setFiles([]);\n    setSuccessfullUploaded(false);\n    setTFpredictions([])\n    setCVpredictions([])\n  }\n\n  function renderActions() {\n    if (successfullUploaded) {\n      return (\n        <button\n          onClick={ clear }\n        >\n          Clear\n        </button>\n      );\n    } else {\n      return (\n        <button\n          disabled={files.length < 0 || uploading}\n          onClick={uploadFiles}\n        >\n          Upload\n        </button>\n      );\n    }\n  }\n\n  function renderPredictions() {\n    if (TFpredictions.length > 0) {\n      return (\n        <div style={{ padding: 20 }}>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>TensorFlow Class</TableCell>\n                <TableCell align=\"right\">TensorFlow Prediction</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {TFpredictions.map((d, idx) => (\n                <TableRow key={idx} style={ idx % 2? { background : \"#fdffe0\" }:{ background : \"white\" }}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {d.class}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {parseInt(d.prob * 100)}%\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        </div>\n        \n      );\n    }\n  }\n\n  function renderPredictionsCustomVision() {\n    if (CVpredictions.length > 0) {\n      return (\n        <div style={{ padding: 20 }}>\n          <TableContainer component={Paper}>\n            <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Custom Vision Class</TableCell>\n                  <TableCell align=\"right\">Custom Vision Prediction</TableCell>\n                </TableRow>\n              </TableHead>\n            <TableBody>\n              {CVpredictions.map((d, idx) => (\n                <TableRow key={idx} style={ idx % 2? { background : \"#fdffe0\" }:{ background : \"white\" }}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {d.class}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {parseInt(d.prob * 100)}%\n                  </TableCell>\n                </TableRow>\n              ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </div>\n        \n      );\n    }\n  }\n\n  return(\n    <React.Fragment>\n      {/* Dropzone */}\n      <Grid container spacing={0} direction=\"column\" alignItems=\"center\" justify=\"center\">\n        {!files.length && (\n          <Dropzone\n            onFilesAdded={onFilesAdded}\n            disabled={uploading || successfullUploaded}\n          />\n        )}\n      </Grid>\n      \n      {/* Image preview */}\n      <Grid container spacing={0} direction=\"column\" alignItems=\"center\" justify=\"center\">\n        {files.map(file => {\n          return(\n            <Grid key={file.name} item xs={3}> \n              <img src={URL.createObjectURL(file)} alt=\"\" width='300px' height='300px'/>\n              <span className='fileName'>{file.name}</span>\n              {renderProgress(file)}\n            </Grid>\n          )\n        })}\n      </Grid>\n      \n      {/* Machine learning predictions */}\n        <Grid container spacing={0} direction=\"column\" alignItems=\"center\" justify=\"center\">\n          {renderPredictions()}\n        </Grid>\n\n        <Grid container spacing={0} direction=\"column\" alignItems=\"center\" justify=\"center\">\n          {renderPredictionsCustomVision()}\n        </Grid>\n      \n      \n      <Grid container spacing={0} direction=\"column\" alignItems=\"center\" justify=\"center\">\n        <div style={{ padding: 20 }}>{renderActions()}</div>\n        {/* <div className=\"Actions\">{renderActions()}</div> */}\n      </Grid>\n      \n    </React.Fragment>\n  );\n}\n\nexport default Upload;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\n\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\n\nexport default function Header() {\n  const classes = useStyles();\n  const [open] = React.useState(true);\n\n\n  return (\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open)}>\n        <Toolbar className={classes.toolbar}>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Image Classification Demo\n          </Typography>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nfunction Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://linkedin.com/in/fskroes\">\n          By: Fernando Silva Kroes\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    footer: {\n      backgroundColor: theme.palette.background.paper,\n      // marginTop: theme.spacing(8),\n      padding: theme.spacing(6, 0),\n    },\n}));\n\nexport default function Footer(props) {\n    const classes = useStyles();\n    const { description, title } = props;\n  \n    return (\n      <footer className={classes.footer}>\n        <Container maxWidth=\"lg\">\n          <Typography variant=\"h6\" align=\"center\" gutterBottom>\n            {title}\n          </Typography>\n          <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n            {description}\n          </Typography>\n          <Copyright />\n        </Container>\n      </footer>\n    );\n}\n\nFooter.propTypes = {\n    description: PropTypes.string,\n    title: PropTypes.string,\n};","import './App.css';\nimport React from 'react';\nimport Upload from './component/upload';\nimport Header from './component/header';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Footer from './component/footer';\n\nfunction App() {\n  const [isAPIAlive, setApiAlive] = React.useState(false);\n\n  React.useEffect(() => {\n    fetch('http://localhost:3000/api/testAPI')\n      .then(res => res.text())\n      .then(() => setApiAlive(true))\n      .catch(() => setApiAlive(false))\n  }, [isAPIAlive]);\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      height: '100vh',\n      overflow: 'auto',\n    },\n    container: {\n      paddingTop: theme.spacing(4),\n      paddingBottom: theme.spacing(4),\n    }\n  }));\n\n  const classes = useStyles();\n\n\n\n  // if (!isAPIAlive) return <p>API is alive.</p>\n  return(\n    <React.Fragment>\n      <div className={classes.root}>\n        <CssBaseline />\n        <Header />\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container container maxWidth=\"auto\" className={classes.container}>\n\n            <Upload />\n\n          </Container>\n        </main>\n      </div>\n      <Footer title='Footer' description=\"Something here to give the footer a purpose!\"/>\n    </React.Fragment>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}